
parameters:
- name: python_version
  displayName: 'Python version used for build'
  type: object
  default: ["'3.8'"]

- name: test_dockerfile
  displayName: 'Dockerfile to use for testing once package is built.'
  type: string
  default: 'torch_ort/docker/Dockerfile.ort-torch2.0.0-onnxruntime-nightly-cu118-cudnn8-devel-ubuntu20.04'

- name: upload_wheel
  displayName: 'Whether the wheel should be uploaded to Azure Storage'
  type: string
  default: 'yes'

stages:
- stage: Python_Packaging

  jobs:
    - job: Linux_py_GPU_Wheels
      timeoutInMinutes: 180
      workspace:
        clean: all
      pool: Onnxruntime-Linux-GPU
      strategy:
        matrix:
        ${{ each PythonVersion in parameters.python_version }}:
            'Python${{ PythonVersion }}':
              PythonVersion: ${{ PythonVersion }}
              PublicDockerFile: ${{ parameters.test_dockerfile }}
              UploadWheel: ${{ parameters.upload_wheel }}

      variables:
        BuildType: 'nightly'

      steps:
      - checkout: self
        clean: true
        submodules: recursive

      - template: templates/packaging-pipeline-steps.yml
        parameters:
          PythonVersion: $(PythonVersion)
          PublicDockerFile: $(PublicDockerFile)
          UploadWheel: $(UploadWheel)
          BuildType: $(BuildType)

      - template: templates/component-governance-component-detection-steps.yml
        parameters:
          condition: 'succeeded'

      - template: templates/clean-agent-build-directory-step.yml
